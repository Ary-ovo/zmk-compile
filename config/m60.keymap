/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define NAV   1
#define RGB   2

/ {
	keymap0: keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------
// | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP   |
// | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |    \    |
// | NAV  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |
// |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |      SHIFT       |
// |  CTL  |  WIN  |  ALT  |            SPACE               | ALT | MENU |  RGB  | CTRL    |
// ------------------------------------------------------------------------------------------
			bindings = <
	&kp ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp   N8  &kp  N9 &kp  N0  &kp MINUS &kp EQUAL &kp BSPC
	&kp TAB  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp   I   &kp  O  &kp   P  &kp LBKT &kp RBKT  &kp BSLH
	&mo NAV   &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp   K   &kp  L  &kp SEMI &kp SQT           &kp RET
	&kp LSHFT  &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH         &kp RSHFT
	&kp LCTRL &kp LGUI &kp LALT               &kp SPACE                 &kp  RALT   &kp K_CMENU &mo  RGB  &kp  RCTRL
			>;
		};

    // # layer 1
    // (
    //     '`',   F1,   F2,   F3,  F4,  F5,  F6,   F7,  F8,   F9,   F10, F11, F12, DEL,
    //     L3 , PREV, PLAY, NEXT, ___, ___, ___, PGUP,  UP, PGDN, PRINT, ___, ___, ___,
    //     ___, VOLD, MUTE, VOLU, ___, ___, HOME, LEFT, DOWN, RIGHT, ___, ___, ___,
    //     ___,  ___,  ___,  ___, ___, ___,  END,  ___,  ___,   ___, ___,      ___,
    //     ___,  ___,  ___,                ___,               ___, ___, ___,  ___
    // ),

		nav_layer {
			bindings = <
&kp GRAVE  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12 &kp DELETE
&trans     &kp C_PREV &kp C_PLAY_PAUSE &kp C_NEXT  &none  &none  &none  &kp PAGE_UP  &kp UP  &kp PAGE_DOWN  &kp PSCRN  &none  &none  &reset
&trans     &kp C_VOLUME_DOWN  &kp C_MUTE $kp C_VOLUME_UP &none &none  &kp HOME &kp LEFT &kp DOWN   &kp RIGHT  &none   &none  &trans
&trans     &none      &none      &none      &none      &none      &kp END      &none      &none      &none      &none      &trans
&trans       &trans       &trans       &trans                                                                     &trans     &trans     &trans     &trans
			>;
		};

		//# layer 2
    //(
    //    BT_TOGGLE,BT1,BT2, BT3,BT4,BT5,BT6,BT7, BT8, BT9, BT0, ___, ___, SUSPEND,
    //    RGB_MOD, ___, ___, ___, ___, ___,___,USB_TOGGLE,___,___,___,___,___, ___,
    //    RGB_TOGGLE,HUE_RGB,RGB_HUE,SAT_RGB,RGB_SAT,___,___,___,___,___,___,___,      SHUTDOWN,
    //    ___, ___, ___, ___, ___, BOOT, ___, ___,VAL_RGB,RGB_VAL, ___,           ___,
    //    ___, ___, ___,                ___,               ___, ___, ___,  ___
    //),

   rgb_layer {
			bindings = <
&none &none &none &none &none &none &none &none &none &none &none &none &none &none
&rgb_ug RGB_EFF &rgb_ug RGB_EFR &none &none &none &none &none &none &none &none &none &none &none &none
&rgb_ug RGB_TOG &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &none &none &none &none &none &none &none &none
&none &none &none &none &none &bootloader&none &none &rgb_ug RGB_BRD &rgb_ug RGB_BRI &rgb_ug RGB_SPD &rgb_ug RGB_SPI
&none &none &none             &none              &none &none &none &none
			>;
		};
	};
};
